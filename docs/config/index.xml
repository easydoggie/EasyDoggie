<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Config on EasyDoggie</title>
    <link>https://easydoggie.github.io/EasyDoggie/config/</link>
    <description>Recent content in Config on EasyDoggie</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 17 Jun 2019 10:54:43 +0900</lastBuildDate>
    
	<atom:link href="https://easydoggie.github.io/EasyDoggie/config/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Prometheus</title>
      <link>https://easydoggie.github.io/EasyDoggie/config/prometheus/</link>
      <pubDate>Thu, 20 Jun 2019 17:17:01 +0900</pubDate>
      
      <guid>https://easydoggie.github.io/EasyDoggie/config/prometheus/</guid>
      <description>作成中</description>
    </item>
    
    <item>
      <title>Nodejs</title>
      <link>https://easydoggie.github.io/EasyDoggie/config/nodejs/</link>
      <pubDate>Thu, 20 Jun 2019 17:16:30 +0900</pubDate>
      
      <guid>https://easydoggie.github.io/EasyDoggie/config/nodejs/</guid>
      <description>作成中</description>
    </item>
    
    <item>
      <title>Kibana</title>
      <link>https://easydoggie.github.io/EasyDoggie/config/kibana/</link>
      <pubDate>Wed, 19 Jun 2019 16:50:37 +0900</pubDate>
      
      <guid>https://easydoggie.github.io/EasyDoggie/config/kibana/</guid>
      <description>作成中</description>
    </item>
    
    <item>
      <title>Gitea</title>
      <link>https://easydoggie.github.io/EasyDoggie/config/gitea/</link>
      <pubDate>Wed, 19 Jun 2019 16:10:14 +0900</pubDate>
      
      <guid>https://easydoggie.github.io/EasyDoggie/config/gitea/</guid>
      <description>作成中</description>
    </item>
    
    <item>
      <title>Fluentd</title>
      <link>https://easydoggie.github.io/EasyDoggie/config/fluentd/</link>
      <pubDate>Wed, 19 Jun 2019 15:46:47 +0900</pubDate>
      
      <guid>https://easydoggie.github.io/EasyDoggie/config/fluentd/</guid>
      <description>作成中</description>
    </item>
    
    <item>
      <title>Redis</title>
      <link>https://easydoggie.github.io/EasyDoggie/config/redis/</link>
      <pubDate>Mon, 17 Jun 2019 10:18:17 +0900</pubDate>
      
      <guid>https://easydoggie.github.io/EasyDoggie/config/redis/</guid>
      <description>シングルマスター構成 マスター x 1、スレーブ x 0の構成例です。スレーブを利用しない場合は、cluster.enabledの値をfalseに設定します。
# file: redis/redis/values.yaml redis: usePassword: false cluster: enabled: false    # values     Master 1   Slave 0   Master RDB x   Master AOF o    
   接続先 ホスト ポート     Master redis-master 6379    マスター、スレーブ構成 マスター x 1、スレーブ x 2の構成例です。スレーブを利用する場合は、cluster.enabledをtrueに設定します。スレーブのノード数は、cluser.slaveCountで設定します。
# file: redis/redis/values.yaml redis: usePassword: false cluster: enabled: true slaveCount: 2    # values     Master 1   Slave 2   Master RDB x   Master AOF o   Slave RDB x   Slave AOF o</description>
    </item>
    
    <item>
      <title>Mysql</title>
      <link>https://easydoggie.github.io/EasyDoggie/config/mysql/</link>
      <pubDate>Mon, 17 Jun 2019 10:17:05 +0900</pubDate>
      
      <guid>https://easydoggie.github.io/EasyDoggie/config/mysql/</guid>
      <description>シングルマスター構成 マスター x 1、スレーブ x 0の構成例です。スレーブを利用しない場合は、replication.enabledの値をfalseに設定します。
# file: mysql/mysql/values mysql: db: name: testdb root: password: easydoggie replication: enabled: false    接続先 ホスト ポート     Master &amp;lt;helm_name&amp;gt;-mysql 3306    マスター、スレーブ構成 マスター x 1、スレーブ x 2の構成例です。スレーブを利用する場合は、replication.enabledをtrueに設定します。スレーブのノード数は、slave.replicasで設定します。
# file: mysql/mysql/values mysql: db: name: testdb root: password: easydoggie replication: enabled: true slave: replicas: 2    接続先 ホスト ポート     Master &amp;lt;helm_name&amp;gt;-mysql 3306   Slave &amp;lt;helm_name&amp;gt;-mysql-slave 3306    マスター、スレーブの切り離し間隔を調整する マスター、スレーブのPodをServiceから切り離す時間を調整します。デフォルトでは以下のヘルスチェック間隔と連続失敗回数を満たすと、Serviceから切り離されます。</description>
    </item>
    
    <item>
      <title>Adminer</title>
      <link>https://easydoggie.github.io/EasyDoggie/config/adminer/</link>
      <pubDate>Thu, 20 Jun 2019 17:14:58 +0900</pubDate>
      
      <guid>https://easydoggie.github.io/EasyDoggie/config/adminer/</guid>
      <description>サービスの構成、初期化方法の変更 以下の表はAdminerの変更可能なパラーメータとデフォルト値の一覧です。    パラメータ デフォルト 説明     replicaCount 1 レプリカセットの数   image.repository easydoggie/adminer Adminerのイメージ名   image.tag 0.1.0 Adminerイメージのタグ名   image.pullPolicy IfNotPresent イメージのプルポリシー   imageNginx.repository nginx Adminer用リバースプロキシのイメージ名   imageNginx.tag 1.15.12-alpine Adminer用リバースプロキシイメージのタグ名   imageNginx.pullPolicy IfNotPresent Adminer用リバースプロキシイメージのプルポリシー   nameOverride &amp;rdquo;&amp;rdquo; チャート名を上書きする場合に使用する   fullnameOverride adminer アプリケーション名を上書きする場合に使用する。指定しない場合は、チャート名-リリース名が設定される   service.type NodePort Serviceのタイプ   service.port 80 Serviceのポート   service.targetPort 80 Serviceのターゲットポート   appServer.</description>
    </item>
    
    <item>
      <title>Elasticsearch</title>
      <link>https://easydoggie.github.io/EasyDoggie/config/elasticsearch/</link>
      <pubDate>Wed, 19 Jun 2019 16:50:57 +0900</pubDate>
      
      <guid>https://easydoggie.github.io/EasyDoggie/config/elasticsearch/</guid>
      <description> デフォルトの設定 # file: elasticsearch/elasticsearch/values.yaml elasticsearch: roles: ingest: false replicas: 1 resources: requests: memory: 128Mi    パラメータ 初期値 説明     elasticsearch.roles.ingest false ElasticsearchのIngest nodeを無効にします。有効にする場合はtrueに設定します。   elasticsearch.replicas 1 Elasticsearchのレプリカ数   elasticsearch.resources.requests.memory 128Mi メモリ使用量の上限    </description>
    </item>
    
    <item>
      <title>Drone</title>
      <link>https://easydoggie.github.io/EasyDoggie/config/drone/</link>
      <pubDate>Wed, 19 Jun 2019 13:46:05 +0900</pubDate>
      
      <guid>https://easydoggie.github.io/EasyDoggie/config/drone/</guid>
      <description>デフォルトの設定 #file: drone/values.yaml drone: service: type: NodePort server: host: drone.localhost sourceControl: provider: gitea gitea: server: http://gitea:3000 sharedSecret: 45f7a425dc0595bdca3af34ef97ebaa4    パラメータ 初期値 説明     drone.service.type NodePort Serviceタイプ   drone.server.host drone.localhost DroneのWebUIのホスト名   drone.sourceControl.provider gitea ソース管理をしているプロバイダ   drone.sourceControl.gitea.server http://gitea:3000 Giteaサーバのアドレス   drone.sharedSecret 45f7a425dc0595bdca3af34ef97ebaa4 DroneとGiteaの共有秘密鍵    設定変更の例 ServiceタイプをLoadBalancerに変更する 外部からのアクセスにIngressではなくLoadBalancerを使う場合は、Serviceタイプの変更を行います。
以下のファイルをHelmクライアントを実行するサーバに作成します。
# file: edit01-values.yaml drone: service: type: LoadBalancer インストールを実行します。
$ helm install --name drone -f edit01-values.</description>
    </item>
    
    <item>
      <title>Ingress</title>
      <link>https://easydoggie.github.io/EasyDoggie/config/ingress/</link>
      <pubDate>Thu, 20 Jun 2019 17:15:40 +0900</pubDate>
      
      <guid>https://easydoggie.github.io/EasyDoggie/config/ingress/</guid>
      <description>サービスの構成、初期化方法の変更 以下の表はIngressおよびNGINX Ingressの変更可能なパラーメータとデフォルト値の一覧です。    パラメータ デフォルト 説明     nginx-ingress.controller.service.type LoadBalancer Nginx Ingressのサービスタイプ   ingress.enabled true ingressリソースを有効にする場合はtrue、無効にする場合はfalse   ingress.nginxController true IngressコントローラとしてNginx Ingressを利用する場合はtrue, 利用しない場合はfalse   ingress.annotations {} Ingressのannotaions   ingress.hosts.nginx.host easydoggie.example.com NINGXのホスト名   ingress.hosts.nginx.enabled true NGINXへのアクセスルールを有効にする場合はtrue, 無効にする場合はfalse   ingress.hosts.nginx.serviceName nginx NGINXのService名   ingress.hosts.nginx.servicePort 80 NGINXのSerivceポート番号   ingress.hosts.gitea.host gitea.example.com Giteaのホスト名   ingress.hosts.gitea.enabled true Giteaへのアクセスルールを有効にする場合はtrue, 無効にする場合はfalse   ingress.hosts.gitea.serviceName gitea GiteaのService名   ingress.</description>
    </item>
    
    <item>
      <title>NGINX, NGINX Unit</title>
      <link>https://easydoggie.github.io/EasyDoggie/config/nginx/</link>
      <pubDate>Thu, 20 Jun 2019 17:16:07 +0900</pubDate>
      
      <guid>https://easydoggie.github.io/EasyDoggie/config/nginx/</guid>
      <description>サービスの構成、初期化方法の変更 以下の表はNGINXおよびNGINX Unitの変更可能なパラーメータとデフォルト値の一覧です。    パラメータ デフォルト 説明     replicaCount 1 レプリカセットの数   image.repository nginx NGINXのイメージ名   image.tag 1.16.0-alpine NGINXイメージのタグ名   image.pullPolicy IfNotPresent イメージのプルポリシー   imageUnit.repository nginx/unit NGINX Unitのイメージ名   imageUnit.tag 1.9.0-full NGINX Unitのタグ名   imageUnit.pullPolicy IfNotPresent イメージのプルポリシー   imageInit.alpine.repository alpine/git 初期化コンテナ(git clone)用のイメージ名   imageInit.alpine.tag latest 初期化イメージのタグ名   imageInit.alpine.pullPolicy IfNotPresent 初期化イメージのプルポリシー   imageInit.alpine.command |-
- &amp;quot;&amp;quot; 初期化コンテナのEntryPoint   imageInit.</description>
    </item>
    
  </channel>
</rss>