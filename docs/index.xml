<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>EasyDoggie</title>
    <link>https://easydoggie.github.io/EasyDoggie/</link>
    <description>Recent content on EasyDoggie</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 17 Jun 2019 15:35:58 +0900</lastBuildDate>
    
	<atom:link href="https://easydoggie.github.io/EasyDoggie/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Uninstall</title>
      <link>https://easydoggie.github.io/EasyDoggie/uninstall/uninstall/</link>
      <pubDate>Tue, 18 Jun 2019 15:14:04 +0900</pubDate>
      
      <guid>https://easydoggie.github.io/EasyDoggie/uninstall/uninstall/</guid>
      <description> アンインストール 完全に消去する場合は、--purgeオプションを利用します。には削除対象のリリース名を指定します。
$ helm delete --purge &amp;lt;release_name&amp;gt;</description>
    </item>
    
    <item>
      <title>Elasticsearch</title>
      <link>https://easydoggie.github.io/EasyDoggie/config/elasticsearch/</link>
      <pubDate>Wed, 19 Jun 2019 16:50:57 +0900</pubDate>
      
      <guid>https://easydoggie.github.io/EasyDoggie/config/elasticsearch/</guid>
      <description>Lorem Ipsum.</description>
    </item>
    
    <item>
      <title>Kibana</title>
      <link>https://easydoggie.github.io/EasyDoggie/config/kibana/</link>
      <pubDate>Wed, 19 Jun 2019 16:50:37 +0900</pubDate>
      
      <guid>https://easydoggie.github.io/EasyDoggie/config/kibana/</guid>
      <description>Lorem Ipsum.</description>
    </item>
    
    <item>
      <title>Gitea</title>
      <link>https://easydoggie.github.io/EasyDoggie/config/gitea/</link>
      <pubDate>Wed, 19 Jun 2019 16:10:14 +0900</pubDate>
      
      <guid>https://easydoggie.github.io/EasyDoggie/config/gitea/</guid>
      <description>Lorem Ipsum.</description>
    </item>
    
    <item>
      <title>Fluentd</title>
      <link>https://easydoggie.github.io/EasyDoggie/config/fluentd/</link>
      <pubDate>Wed, 19 Jun 2019 15:46:47 +0900</pubDate>
      
      <guid>https://easydoggie.github.io/EasyDoggie/config/fluentd/</guid>
      <description>Lorem Ipsum.</description>
    </item>
    
    <item>
      <title>Drone</title>
      <link>https://easydoggie.github.io/EasyDoggie/config/drone/</link>
      <pubDate>Wed, 19 Jun 2019 13:46:05 +0900</pubDate>
      
      <guid>https://easydoggie.github.io/EasyDoggie/config/drone/</guid>
      <description>デフォルトの設定 #file: drone/values.yaml drone: service: type: NodePort server: host: drone.localhost sourceControl: provider: gitea gitea: server: http://gitea:3000 sharedSecret: 45f7a425dc0595bdca3af34ef97ebaa4    パラメータ 初期値 説明     drone.service.type NodePort Serviceタイプ   drone.server.host drone.localhost DroneのWebUIのホスト名   drone.sourceControl.provider gitea ソース管理をしているプロバイダ   drone.sourceControl.gitea.server http://gitea:3000 Giteaサーバのアドレス   drone.sharedSecret 45f7a425dc0595bdca3af34ef97ebaa4 DroneとGiteaの共有秘密鍵    設定変更の例 ServiceタイプをLoadBalancerに変更する 外部からのアクセスにIngressではなくLoadBalancerを使う場合は、Serviceタイプの変更を行います。
以下のファイルをHelmクライアントを実行するサーバに作成します。
# file: edit01-values.yaml drone: service: type: LoadBalancer インストールを実行します。
$ helm install --name drone -f edit01-values.</description>
    </item>
    
    <item>
      <title>Prometheus</title>
      <link>https://easydoggie.github.io/EasyDoggie/uninstall/prometheus/</link>
      <pubDate>Tue, 18 Jun 2019 15:11:47 +0900</pubDate>
      
      <guid>https://easydoggie.github.io/EasyDoggie/uninstall/prometheus/</guid>
      <description>Prometheus Operatorの完全アンインストール helm deleteコマンドだけだと、kunernetesのCRD(Custom Resource Definitions)は削除されません。 CRDはkubectl delete crdコマンドで個別に削除をします。
$ helm delete --purge &amp;lt;release_name&amp;gt; $ kubectl delete crd prometheuses.monitoring.coreos.com $ kubectl delete crd prometheusrules.monitoring.coreos.com $ kubectl delete crd servicemonitors.monitoring.coreos.com $ kubectl delete crd alertmanagers.</description>
    </item>
    
    <item>
      <title>Redis</title>
      <link>https://easydoggie.github.io/EasyDoggie/config/redis/</link>
      <pubDate>Mon, 17 Jun 2019 10:18:17 +0900</pubDate>
      
      <guid>https://easydoggie.github.io/EasyDoggie/config/redis/</guid>
      <description>シングルマスター構成 マスター x 1、スレーブ x 0の構成例です。スレーブを利用しない場合は、cluster.enabledの値をfalseに設定します。
# file: redis/redis/values.yaml redis: usePassword: false cluster: enabled: false    # values     Master 1   Slave 0   Master RDB x   Master AOF o    
   接続先 ホスト ポート     Master redis-master 6379    マスター、スレーブ構成 マスター x 1、スレーブ x 2の構成例です。スレーブを利用する場合は、cluster.enabledをtrueに設定します。スレーブのノード数は、cluser.slaveCountで設定します。
# file: redis/redis/values.yaml redis: usePassword: false cluster: enabled: true slaveCount: 2    # values     Master 1   Slave 2   Master RDB x   Master AOF o   Slave RDB x   Slave AOF o</description>
    </item>
    
    <item>
      <title>Mysql</title>
      <link>https://easydoggie.github.io/EasyDoggie/config/mysql/</link>
      <pubDate>Mon, 17 Jun 2019 10:17:05 +0900</pubDate>
      
      <guid>https://easydoggie.github.io/EasyDoggie/config/mysql/</guid>
      <description>シングルマスター構成 マスター x 1、スレーブ x 0の構成例です。スレーブを利用しない場合は、replication.enabledの値をfalseに設定します。
# file: mysql/mysql/values mysql: db: name: testdb root: password: easydoggie replication: enabled: false    接続先 ホスト ポート     Master &amp;lt;helm_name&amp;gt;-mysql 3306    マスター、スレーブ構成 マスター x 1、スレーブ x 2の構成例です。スレーブを利用する場合は、replication.enabledをtrueに設定します。スレーブのノード数は、slave.replicasで設定します。
# file: mysql/mysql/values mysql: db: name: testdb root: password: easydoggie replication: enabled: true slave: replicas: 2    接続先 ホスト ポート     Master &amp;lt;helm_name&amp;gt;-mysql 3306   Slave &amp;lt;helm_name&amp;gt;-mysql-slave 3306    マスター、スレーブの切り離し間隔を調整する マスター、スレーブのPodをServiceから切り離す時間を調整します。デフォルトでは以下のヘルスチェック間隔と連続失敗回数を満たすと、Serviceから切り離されます。</description>
    </item>
    
    <item>
      <title>Grafana</title>
      <link>https://easydoggie.github.io/EasyDoggie/password/grafana/</link>
      <pubDate>Mon, 17 Jun 2019 10:16:06 +0900</pubDate>
      
      <guid>https://easydoggie.github.io/EasyDoggie/password/grafana/</guid>
      <description> Grafana 以下のコマンドでadminユーザの初期パスワードを取得します。
$ kubectl get secret grafana -o jsonpath=&amp;#34;{.data.admin-password}&amp;#34; | base64 --decode ; echo</description>
    </item>
    
    <item>
      <title>Adminer</title>
      <link>https://easydoggie.github.io/EasyDoggie/install/adminer/</link>
      <pubDate>Tue, 18 Jun 2019 15:18:56 +0900</pubDate>
      
      <guid>https://easydoggie.github.io/EasyDoggie/install/adminer/</guid>
      <description> Adminerのインストール Adminerはデータベースの管理ツールです。phpMyAdminの代替として利用することができます。 対応しているデータベースは以下の通りです。
 MySQL MariaDB PostgreSQL SQLite MS SQL Oracle Firebird SimpleDB Elasticsearch MongoDB  ServiceとしてNoadPortを使う場合(デフォルト) $ helm install --name &amp;lt;release_name&amp;gt; easydoggie/adminer &amp;lt;release_name&amp;gt;には任意のリリース名を指定します。
 デフォルトのServiceタイプはIngress経由でのアクセスを想定しているため、NodePortとして起動します。 上記のインストールコマンドではIngress ControllerとIngess Resourceのインストールは行われません。 Ingress経由でAdminerにアクセスする場合は、別途Ingressのインストールを行ってください。  ServiceとしてLoadBalancerを使う場合 Ingressを使わず、ServiceタイプとしてLoadBalancerを使う場合は、setオプションでサービスタイプをLoadBalancerに変更します。
$ helm install --name &amp;lt;release_name&amp;gt; --set service.type=LoadBalancer easydoggie/adminer</description>
    </item>
    
    <item>
      <title>Drone</title>
      <link>https://easydoggie.github.io/EasyDoggie/install/drone/</link>
      <pubDate>Tue, 18 Jun 2019 15:19:05 +0900</pubDate>
      
      <guid>https://easydoggie.github.io/EasyDoggie/install/drone/</guid>
      <description> Droneのインストール DroneはCI/CDを行うためのツールです。
デフォルトのソースリポジトリはDroneと同じKubernetes上のGiteaを参照します。参照先のリポジトリを変更したい場合は、Configのページを参照してください。
ServiceとしてNoadPortを使う場合(デフォルト) $ helm install --name &amp;lt;release_name&amp;gt; easydoggie/drone &amp;lt;release_name&amp;gt;には任意のリリース名を指定します。
 デフォルトのServiceタイプはIngress経由でのアクセスを想定しているため、NodePortとして起動します。 上記のインストールコマンドではIngress ControllerとIngess Resourceのインストールは行われません。 Ingress経由でDroneにアクセスする場合は、別途Ingressのインストールを行ってください。  ServiceとしてLoadBalancerを使う場合 Ingressを使わず、ServiceタイプとしてLoadBalancerを使う場合は、setオプションでサービスタイプをLoadBalancerに変更します。
$ helm install --name &amp;lt;release_name&amp;gt; --set drone.service.type=LoadBalancer easydoggie/drone</description>
    </item>
    
    <item>
      <title>Elasticsearch</title>
      <link>https://easydoggie.github.io/EasyDoggie/install/elasticsearch/</link>
      <pubDate>Tue, 18 Jun 2019 15:19:15 +0900</pubDate>
      
      <guid>https://easydoggie.github.io/EasyDoggie/install/elasticsearch/</guid>
      <description>Elasticsearchは分散型RESTful検索/分析エンジンです。
EasyDoggieでは、Fluentd、Elasticsearch、Kibanaのセットでログを検索/分析する用途で利用することを想定しています。
Elasticsearchのインストール &amp;lt;release_name&amp;gt;には任意のリリース名を指定します。
$ helm install --name &amp;lt;release_name&amp;gt; easydoggie/elasticsearch デフォルトではシングルマスタのノードが起動します。 クラスタのノード数の変更などは、設定変更のページを参照してください。</description>
    </item>
    
    <item>
      <title>Fluentd</title>
      <link>https://easydoggie.github.io/EasyDoggie/install/fluentd/</link>
      <pubDate>Tue, 18 Jun 2019 15:19:24 +0900</pubDate>
      
      <guid>https://easydoggie.github.io/EasyDoggie/install/fluentd/</guid>
      <description>Fluentdはログのデータを収集します。
EasyDoggieでは、Fluentd、Elasticsearch、Kibanaのセットでログを収集する用途で利用することを想定しています。
Fluentdのインストール &amp;lt;release_name&amp;gt;には任意のリリース名を指定します。
$ helm install --name &amp;lt;release_name&amp;gt; easydoggie/fluentd デフォルトでは同じKuberneteクラスタ内のElasticsearchに収集したデータを転送します。 転送先の設定などの変更を行う場合は、設定変更のページを参照してください。</description>
    </item>
    
    <item>
      <title>Gitea</title>
      <link>https://easydoggie.github.io/EasyDoggie/install/gitea/</link>
      <pubDate>Tue, 18 Jun 2019 15:19:32 +0900</pubDate>
      
      <guid>https://easydoggie.github.io/EasyDoggie/install/gitea/</guid>
      <description> GiteaはセルフホストのGitサーバです。
Giteaのインストール ServiceとしてNoadPortを使う場合(デフォルト) &amp;lt;release_name&amp;gt;には任意のリリース名を指定します。
$ helm install --name &amp;lt;release_name&amp;gt; easydoggie/gitea  デフォルトのServiceタイプはIngress経由でのアクセスを想定しているため、NodePortとして起動します。 上記のインストールコマンドではIngress ControllerとIngess Resourceのインストールは行われません。 Ingress経由でGiteaにアクセスする場合は、別途Ingressのインストールを行ってください。  ServiceとしてLoadBalancerを使う場合 Ingressを使わず、ServiceタイプとしてLoadBalancerを使う場合は、setオプションでサービスタイプをLoadBalancerに変更します。
$ helm install --name &amp;lt;release_name&amp;gt; --set service.type=LoadBalancer easydoggie/gitea</description>
    </item>
    
    <item>
      <title>Ingress</title>
      <link>https://easydoggie.github.io/EasyDoggie/install/ingress/</link>
      <pubDate>Tue, 18 Jun 2019 15:20:03 +0900</pubDate>
      
      <guid>https://easydoggie.github.io/EasyDoggie/install/ingress/</guid>
      <description> IngressコントローラとしてNginx Ingressを利用する場合 デフォルトでは、IngressとNginx Ingressコントローラがインストールされます。 &amp;lt;release_name&amp;gt;には任意のリリース名を指定します。
$ helm install --name &amp;lt;release_name&amp;gt; easydoggie/ingress Ingressだけをインストールする場合 GKEなどIngressコントローラとしてマネジメントLBなどを利用する場合のパターンです。Ingressのみ必要な場合は、setオプションでNginx-Ingressのインストールを禁止設定にします。
$ helm install --name &amp;lt;release_name&amp;gt; --set ingress.nginxController=false easydoggie/ingress</description>
    </item>
    
    <item>
      <title>Kibana</title>
      <link>https://easydoggie.github.io/EasyDoggie/install/kibana/</link>
      <pubDate>Tue, 18 Jun 2019 15:19:39 +0900</pubDate>
      
      <guid>https://easydoggie.github.io/EasyDoggie/install/kibana/</guid>
      <description> Kibanaはデータを可視化するツールです。
EasyDoggieでは、Fluentd、Elasticsearch、Kibanaのセットでログを可視化する用途で利用することを想定しています。
Kibanaのインストール ServiceとしてNoadPortを使う場合(デフォルト) &amp;lt;release_name&amp;gt;には任意のリリース名を指定します。
$ helm install --name &amp;lt;release_name&amp;gt; easydoggie/kibana  デフォルトのServiceタイプはIngress経由でのアクセスを想定しているため、NodePortとして起動します。 上記のインストールコマンドではIngress ControllerとIngess Resourceのインストールは行われません。 Ingress経由でKibanaにアクセスする場合は、別途Ingressのインストールを行ってください。  ServiceとしてLoadBalancerを使う場合 Ingressを使わず、ServiceタイプとしてLoadBalancerを使う場合は、setオプションでサービスタイプをLoadBalancerに変更します。
$ helm install --name &amp;lt;release_name&amp;gt; --set kibana.service.type=LoadBalancer easydoggie/kibana</description>
    </item>
    
    <item>
      <title>Mysql</title>
      <link>https://easydoggie.github.io/EasyDoggie/install/mysql/</link>
      <pubDate>Tue, 18 Jun 2019 15:19:46 +0900</pubDate>
      
      <guid>https://easydoggie.github.io/EasyDoggie/install/mysql/</guid>
      <description>MySQLはデータベース管理システムです。
シングルマスタもしくはマスタ-スレープ構成のMySQLをインストールすることができます。
MySQLのインストール &amp;lt;release_name&amp;gt;には任意のリリース名を指定します。
$ helm install --name &amp;lt;release_name&amp;gt; easydoggie/mysql デフォルトではマスター x 1、スレーブ x 1のノードが起動します。 スレーブのノード数の変更などは、設定変更のページを参照してください。</description>
    </item>
    
    <item>
      <title>Nginx</title>
      <link>https://easydoggie.github.io/EasyDoggie/install/nginx/</link>
      <pubDate>Tue, 18 Jun 2019 15:19:52 +0900</pubDate>
      
      <guid>https://easydoggie.github.io/EasyDoggie/install/nginx/</guid>
      <description> Nginxのインストール  デフォルトのServiceタイプはIngress経由でのアクセスを想定しているため、NodePortとして起動します。 以下のインストールコマンドではIngress ControllerとIngess Resourceのインストールは行われません。 Ingress経由でAdminerにアクセスする場合は、別途Ingressのインストールを行ってください。  NginxとNginx Unitをインストールする場合(デフォルト) デフォルトでは、NginxとNginx Unitがインストールされます。 &amp;lt;release_name&amp;gt;には任意のリリース名を指定します。
$ helm install --name &amp;lt;release_name&amp;gt; easydoggie/nginx Nginxのみインストールする場合 Nginx Unitが不要な場合は、setオプションでNginx Unitのインストールを禁止にします。
$ helm install --name &amp;lt;release_name&amp;gt; --set appServer.enabled=false easydoggie/nginx  ServiceとしてLoadBalancerを使う場合 Ingressを使わず、ServiceタイプとしてLoadBalancerを使う場合は、setオプションでサービスタイプをLoadBalancerに変更します。
$ helm install --name &amp;lt;release_name&amp;gt; --set service.type=LoadBalancer easydoggie/nginx</description>
    </item>
    
    <item>
      <title>Node.js</title>
      <link>https://easydoggie.github.io/EasyDoggie/install/nodejs/</link>
      <pubDate>Fri, 14 Jun 2019 17:56:55 +0900</pubDate>
      
      <guid>https://easydoggie.github.io/EasyDoggie/install/nodejs/</guid>
      <description> Node.jsのインストール ServiceとしてLoadBalancerを使う場合 デフォルトの設定では、Service.type=LoadBalancerとして起動します。 $ helm install --nama &amp;lt;release_name&amp;gt; easydoggie/node IngressとNginx Ingressを使う場合 IngressコントローラとしてNginx Ingressを使うパターンです。 IngressとNginx Ingressを有効にしたマニフェストファイルを指定します。Node.js用のService.typeはNodePortに設定されます。また、ingress.kubernetes.io/ingress.classがnginxに指定されます。 $ helm install --name &amp;lt;release_name&amp;gt; \ -f https://raw.githubusercontent.com/easydoggie/EasyDoggie/master/node/node/values-nginx-ingress.yaml easydoggie/node IngressとGKEなどのマネジメントIngressコントローラを使う場合 IngressコントローラとしてGKEなどのマネジメントロードバランサーを使うパターンです。 Ingressを有効にしたマニフェストファイルを指定します。Node.js用のService.typeはNodePortに設定されます。 $ helm install --name &amp;lt;release_name&amp;gt; \ -f https://raw.githubusercontent.com/easydoggie/EasyDoggie/master/node/node/values-ingress.yaml easydoggie/node</description>
    </item>
    
    <item>
      <title>Prometheus</title>
      <link>https://easydoggie.github.io/EasyDoggie/install/prometheus/</link>
      <pubDate>Mon, 17 Jun 2019 10:06:18 +0900</pubDate>
      
      <guid>https://easydoggie.github.io/EasyDoggie/install/prometheus/</guid>
      <description> Prometheus Operatorのインストール &amp;lt;release_name&amp;gt;には任意のリリース名を指定します。
$ helm install --name &amp;lt;release_name&amp;gt; easydoggie/ptometheus-oeprator</description>
    </item>
    
    <item>
      <title>Redis</title>
      <link>https://easydoggie.github.io/EasyDoggie/install/redis/</link>
      <pubDate>Tue, 18 Jun 2019 15:20:15 +0900</pubDate>
      
      <guid>https://easydoggie.github.io/EasyDoggie/install/redis/</guid>
      <description> Redisのインストール &amp;lt;release_name&amp;gt;には任意のリリース名を指定します。
$ helm install --name &amp;lt;release_name&amp;gt; easydoggie/redis</description>
    </item>
    
  </channel>
</rss>