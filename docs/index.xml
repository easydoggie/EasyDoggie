<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>EasyDoggie</title>
    <link>https://easydoggie.github.io/EasyDoggie/</link>
    <description>Recent content on EasyDoggie</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 17 Jun 2019 15:35:58 +0900</lastBuildDate>
    
	<atom:link href="https://easydoggie.github.io/EasyDoggie/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Uninstall</title>
      <link>https://easydoggie.github.io/EasyDoggie/uninstall/uninstall/</link>
      <pubDate>Tue, 18 Jun 2019 15:14:04 +0900</pubDate>
      
      <guid>https://easydoggie.github.io/EasyDoggie/uninstall/uninstall/</guid>
      <description> アンインストール 完全に消去する場合は、--purgeオプションを利用します。には削除対象のリリース名を指定します。
$ helm delete --purge &amp;lt;release_name&amp;gt;</description>
    </item>
    
    <item>
      <title>Prometheus</title>
      <link>https://easydoggie.github.io/EasyDoggie/uninstall/prometheus/</link>
      <pubDate>Tue, 18 Jun 2019 15:11:47 +0900</pubDate>
      
      <guid>https://easydoggie.github.io/EasyDoggie/uninstall/prometheus/</guid>
      <description>Prometheus Operatorの完全アンインストール helm deleteコマンドだけだと、kunernetesのCRD(Custom Resource Definitions)は削除されません。 CRDはkubectl delete crdコマンドで個別に削除をします。
$ helm delete --purge &amp;lt;release_name&amp;gt; $ kubectl delete crd prometheuses.monitoring.coreos.com $ kubectl delete crd prometheusrules.monitoring.coreos.com $ kubectl delete crd servicemonitors.monitoring.coreos.com $ kubectl delete crd alertmanagers.</description>
    </item>
    
    <item>
      <title>Redis</title>
      <link>https://easydoggie.github.io/EasyDoggie/config/redis/</link>
      <pubDate>Mon, 17 Jun 2019 10:18:17 +0900</pubDate>
      
      <guid>https://easydoggie.github.io/EasyDoggie/config/redis/</guid>
      <description>シングルマスター構成 マスター x 1、スレーブ x 0の構成例です。スレーブを利用しない場合は、cluster.enabledの値をfalseに設定します。
# file: redis/redis/values.yaml redis: usePassword: false cluster: enabled: false    # values     Master 1   Slave 0   Master RDB x   Master AOF o    
   接続先 ホスト ポート     Master redis-master 6379    マスター、スレーブ構成 マスター x 1、スレーブ x 2の構成例です。スレーブを利用する場合は、cluster.enabledをtrueに設定します。スレーブのノード数は、cluser.slaveCountで設定します。
# file: redis/redis/values.yaml redis: usePassword: false cluster: enabled: true slaveCount: 2    # values     Master 1   Slave 2   Master RDB x   Master AOF o   Slave RDB x   Slave AOF o</description>
    </item>
    
    <item>
      <title>Mysql</title>
      <link>https://easydoggie.github.io/EasyDoggie/config/mysql/</link>
      <pubDate>Mon, 17 Jun 2019 10:17:05 +0900</pubDate>
      
      <guid>https://easydoggie.github.io/EasyDoggie/config/mysql/</guid>
      <description>シングルマスター構成 マスター x 1、スレーブ x 0の構成例です。スレーブを利用しない場合は、replication.enabledの値をfalseに設定します。
# file: mysql/mysql/values mysql: db: name: testdb root: password: easydoggie replication: enabled: false    接続先 ホスト ポート     Master &amp;lt;helm_name&amp;gt;-mysql 3306    マスター、スレーブ構成 マスター x 1、スレーブ x 2の構成例です。スレーブを利用する場合は、replication.enabledをtrueに設定します。スレーブのノード数は、slave.replicasで設定します。
# file: mysql/mysql/values mysql: db: name: testdb root: password: easydoggie replication: enabled: true slave: replicas: 2    接続先 ホスト ポート     Master &amp;lt;helm_name&amp;gt;-mysql 3306   Slave &amp;lt;helm_name&amp;gt;-mysql-slave 3306    マスター、スレーブの切り離し間隔を調整する マスター、スレーブのPodをServiceから切り離す時間を調整します。デフォルトでは以下のヘルスチェック間隔と連続失敗回数を満たすと、Serviceから切り離されます。</description>
    </item>
    
    <item>
      <title>Grafana</title>
      <link>https://easydoggie.github.io/EasyDoggie/password/grafana/</link>
      <pubDate>Mon, 17 Jun 2019 10:16:06 +0900</pubDate>
      
      <guid>https://easydoggie.github.io/EasyDoggie/password/grafana/</guid>
      <description> Grafana 以下のコマンドでadminユーザの初期パスワードを取得します。
$ kubectl get secret grafana -o jsonpath=&amp;#34;{.data.admin-password}&amp;#34; | base64 --decode ; echo</description>
    </item>
    
    <item>
      <title>Adminer</title>
      <link>https://easydoggie.github.io/EasyDoggie/install/adminer/</link>
      <pubDate>Tue, 18 Jun 2019 15:18:56 +0900</pubDate>
      
      <guid>https://easydoggie.github.io/EasyDoggie/install/adminer/</guid>
      <description> Adminerのインストール &amp;lt;release_name&amp;gt;には任意のリリース名を指定します。
$ helm install --name &amp;lt;release_name&amp;gt; easydoggie/adminer</description>
    </item>
    
    <item>
      <title>Drone</title>
      <link>https://easydoggie.github.io/EasyDoggie/install/drone/</link>
      <pubDate>Tue, 18 Jun 2019 15:19:05 +0900</pubDate>
      
      <guid>https://easydoggie.github.io/EasyDoggie/install/drone/</guid>
      <description> Droneのインストール &amp;lt;release_name&amp;gt;には任意のリリース名を指定します。
$ helm install --name &amp;lt;release_name&amp;gt; easydoggie/drone</description>
    </item>
    
    <item>
      <title>Elasticsearch</title>
      <link>https://easydoggie.github.io/EasyDoggie/install/elasticsearch/</link>
      <pubDate>Tue, 18 Jun 2019 15:19:15 +0900</pubDate>
      
      <guid>https://easydoggie.github.io/EasyDoggie/install/elasticsearch/</guid>
      <description> Elasticsearchのインストール &amp;lt;release_name&amp;gt;には任意のリリース名を指定します。
$ helm install --name &amp;lt;release_name&amp;gt; easydoggie/elasticsearch</description>
    </item>
    
    <item>
      <title>Fluentd</title>
      <link>https://easydoggie.github.io/EasyDoggie/install/fluentd/</link>
      <pubDate>Tue, 18 Jun 2019 15:19:24 +0900</pubDate>
      
      <guid>https://easydoggie.github.io/EasyDoggie/install/fluentd/</guid>
      <description> Fluentdのインストール &amp;lt;release_name&amp;gt;には任意のリリース名を指定します。
$ helm install --name &amp;lt;release_name&amp;gt; easydoggie/fluentd</description>
    </item>
    
    <item>
      <title>Gitea</title>
      <link>https://easydoggie.github.io/EasyDoggie/install/gitea/</link>
      <pubDate>Tue, 18 Jun 2019 15:19:32 +0900</pubDate>
      
      <guid>https://easydoggie.github.io/EasyDoggie/install/gitea/</guid>
      <description> Giteaのインストール &amp;lt;release_name&amp;gt;には任意のリリース名を指定します。
$ helm install --name &amp;lt;release_name&amp;gt; easydoggie/gitea</description>
    </item>
    
    <item>
      <title>Kibana</title>
      <link>https://easydoggie.github.io/EasyDoggie/install/kibana/</link>
      <pubDate>Tue, 18 Jun 2019 15:19:39 +0900</pubDate>
      
      <guid>https://easydoggie.github.io/EasyDoggie/install/kibana/</guid>
      <description> Kibanaのインストール &amp;lt;release_name&amp;gt;には任意のリリース名を指定します。
$ helm install --name &amp;lt;release_name&amp;gt; easydoggie/kibana</description>
    </item>
    
    <item>
      <title>Mysql</title>
      <link>https://easydoggie.github.io/EasyDoggie/install/mysql/</link>
      <pubDate>Tue, 18 Jun 2019 15:19:46 +0900</pubDate>
      
      <guid>https://easydoggie.github.io/EasyDoggie/install/mysql/</guid>
      <description> MySQLのインストール &amp;lt;release_name&amp;gt;には任意のリリース名を指定します。
$ helm install --name &amp;lt;release_name&amp;gt; easydoggie/mysql</description>
    </item>
    
    <item>
      <title>Nginx</title>
      <link>https://easydoggie.github.io/EasyDoggie/install/nginx/</link>
      <pubDate>Tue, 18 Jun 2019 15:19:52 +0900</pubDate>
      
      <guid>https://easydoggie.github.io/EasyDoggie/install/nginx/</guid>
      <description> Nginxのインストール NginxとNginx Unitがインストールされます。 &amp;lt;release_name&amp;gt;には任意のリリース名を指定します。
$ helm install --name &amp;lt;release_name&amp;gt; easydoggie/nginx Nginx Unitが不要な場合は、valuesの値を変更します。
作成中  </description>
    </item>
    
    <item>
      <title>Nginx Ingress</title>
      <link>https://easydoggie.github.io/EasyDoggie/install/nginx-ingress/</link>
      <pubDate>Tue, 18 Jun 2019 15:20:03 +0900</pubDate>
      
      <guid>https://easydoggie.github.io/EasyDoggie/install/nginx-ingress/</guid>
      <description> Nginx Ingressのインストール IngressとNginx Ingressコントローラがインストールされます。 &amp;lt;release_name&amp;gt;には任意のリリース名を指定します。
$ helm install --name &amp;lt;release_name&amp;gt; easydoggie/nginx-ingress GKEなどIngressのみ必要な場合は、values.yamlの設定を変更します。
作成中  </description>
    </item>
    
    <item>
      <title>Node.js</title>
      <link>https://easydoggie.github.io/EasyDoggie/install/nodejs/</link>
      <pubDate>Fri, 14 Jun 2019 17:56:55 +0900</pubDate>
      
      <guid>https://easydoggie.github.io/EasyDoggie/install/nodejs/</guid>
      <description> Node.jsのインストール ServiceとしてLoadBalancerを使う場合 デフォルトの設定では、Service.type=LoadBalancerとして起動します。 $ helm install --nama &amp;lt;release_name&amp;gt; easydoggie/node IngressとNginx Ingressを使う場合 IngressコントローラとしてNginx Ingressを使うパターンです。 IngressとNginx Ingressを有効にしたマニフェストファイルを指定します。Node.js用のService.typeはNodePortに設定されます。また、ingress.kubernetes.io/ingress.classがnginxに指定されます。 $ helm install --name &amp;lt;release_name&amp;gt; \ -f https://raw.githubusercontent.com/easydoggie/EasyDoggie/master/node/node/values-nginx-ingress.yaml easydoggie/node IngressとGKEなどのマネジメントIngressコントローラを使う場合 IngressコントローラとしてGKEなどのマネジメントロードバランサーを使うパターンです。 Ingressを有効にしたマニフェストファイルを指定します。Node.js用のService.typeはNodePortに設定されます。 $ helm install --name &amp;lt;release_name&amp;gt; \ -f https://raw.githubusercontent.com/easydoggie/EasyDoggie/master/node/node/values-ingress.yaml easydoggie/node</description>
    </item>
    
    <item>
      <title>Prometheus</title>
      <link>https://easydoggie.github.io/EasyDoggie/install/prometheus/</link>
      <pubDate>Mon, 17 Jun 2019 10:06:18 +0900</pubDate>
      
      <guid>https://easydoggie.github.io/EasyDoggie/install/prometheus/</guid>
      <description> Prometheus Operatorのインストール &amp;lt;release_name&amp;gt;には任意のリリース名を指定します。
$ helm install --name &amp;lt;release_name&amp;gt; easydoggie/ptometheus-oeprator</description>
    </item>
    
    <item>
      <title>Redis</title>
      <link>https://easydoggie.github.io/EasyDoggie/install/redis/</link>
      <pubDate>Tue, 18 Jun 2019 15:20:15 +0900</pubDate>
      
      <guid>https://easydoggie.github.io/EasyDoggie/install/redis/</guid>
      <description> Redisのインストール &amp;lt;release_name&amp;gt;には任意のリリース名を指定します。
$ helm install --name &amp;lt;release_name&amp;gt; easydoggie/redis</description>
    </item>
    
  </channel>
</rss>