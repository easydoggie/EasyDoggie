apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: fluentd
spec:
  selector:
    matchLabels:
      name: fluentd-elasticsearch
  template:
    metadata:
      labels:
        name: fluentd-elasticsearch
    spec:
      tolerations:
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
      containers:
      - name: fluentd
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        env:
          - name: FLUENTD_SYSTEMD_CONF
            value: "{{ .Values.systemd.input }}"
          - name:  FLUENT_ELASTICSEARCH_HOST
            value: "{{ .Values.elasticsearch.host }}"
          - name:  FLUENT_ELASTICSEARCH_PORT
            value: "{{ .Values.elasticsearch.port }}"
          - name: FLUENT_ELASTICSEARCH_SCHEME
            value: "{{ .Values.elasticsearch.scheme }}"
          # Option to configure elasticsearch plugin with self signed certs
          # ================================================================
          - name: FLUENT_ELASTICSEARCH_SSL_VERIFY
            value: "true"
          # X-Pack Authentication
          # =====================
          - name: FLUENT_ELASTICSEARCH_USER
            value: ""
          - name: FLUENT_ELASTICSEARCH_PASSWORD
            value: ""
          # Logz.io Authentication
          # ======================
          - name: LOGZIO_TOKEN
            value: "ThisIsASuperLongToken"
          - name: LOGZIO_LOGTYPE
            value: "kubernetes"
        resources:
          limits:
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 200Mi
        volumeMounts:
        - name: varlog
          mountPath: /var/log
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
        - name: {{ .Chart.Name }}-config
          mountPath: /fluentd/etc/conf.d
          subapth: system.conf
      terminationGracePeriodSeconds: 30
      volumes:
      - name: varlog
        hostPath:
          path: /var/log
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      - name: {{ .Chart.Name }}-config
        configMap:
          name: {{ .Chart.Name }}-conf